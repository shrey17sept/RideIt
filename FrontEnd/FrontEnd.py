from datetime import datetime
import random
import mysql.connector;

con=mysql.connector.connect(host="localhost",user="root",passwd="PFH#23kgrw9",database="rideit",charset="utf8")


#creating cursor
cursor=con.cursor()


def login(uid,passwd):
    cursor.execute("select c_password from customer where customer_id=%s",(uid,))
    for row in cursor:
        if(row[0]==passwd):
            return True
    return False

def login_driver(did,passwd):
    cursor.execute("select d_password from driver where driver_id=%s",(did,))
    for row in cursor:
        if(row[0]==passwd):
            return True
    return False

def login_emp(uid,passwd):
    cursor.execute("select emp_password from employee where emp_id=%s",(uid,))
    for row in cursor:
        if(row[0]==passwd):
            return True
    return False

def is_mem(uid):
    cursor.execute("select membership_id from customer where customer_id=%s",(uid,))
    for row in cursor:
        try:
            a=row[0]+42
            return True
        except:
            return False

while(True):
    
    print('''
        MENU
        1. ENTER AS ADMINISTRATION
        2. ENTER AS CUSTOMER
        3. ENTER AS DRIVER
        4. EXIT
    ''')

    type=int(input("Enter query to perform: "))

    if(type==1):
        uid=int(input("Enter your Emp ID: "))
        passwd=input("Enter your password: ")

        if(login_emp(uid,passwd)):
            print("Login Successful!")
        else:
            print("Login Failed")
            continue

        print('''
            MENU
            1. List of customers are there in each city of each state in the database.
            2. Total revenue generated by each fare_mode on each day. 
            3. Number of owned vehicles by vehicle_type and brand_name.
            4. Number of vehicle of each type, in each state.
            5. Insert a trip
            6. Delete an employee
            7. Delete old feedbacks
            8. Increase salary of the employees
            9. Exit
        ''')

        while(True):
            qur=int(input("Enter the query to perform: "))
            if(qur==1):
                cursor.execute('''select haddr_state, haddr_city, count(customer_id) from customer 
                group by haddr_state, haddr_city with rollup''')
                for row in cursor:
                    print(row)
            elif(qur==2):
                cursor.execute('''select ride_date, fare_mode, rating_given_to_driver, sum(ride_fare) from rides
                group by ride_date, fare_mode, rating_given_to_driver with rollup''')
                for row in cursor:
                    print(row)
            elif(qur==3):
                cursor.execute('''select vehicle_type, brand_name, count(vehicle_id) from Vehicle where owned_or_rented='own'
                group by vehicle_type, brand_name with rollup''')
                for row in cursor:
                    print(row)
            elif(qur==4):
                cursor.execute('''select addr_state,vehicle_type, count(driver_id) from (driver INNER JOIN vehicle ON driver.vehicle_id = vehicle.vehicle_id)
                group by addr_state, vehicle_type with rollup''')
                for row in cursor:
                    print(row)
            elif(qur==5):
                ride_id=int(input("Enter Ride ID: "))
                ride_date=input("Enter Ride Date: ")
                ride_time=input("Enter Ride Time: ")
                pick_up_loc=input("Enter Pick Up Location: ")
                dest_loc=input("Enter Destination Location: ")
                ride_fare=int(input("Enter Ride Fare: "))
                fare_mode=input("Enter Fare Mode: ")
                rate_d=int(input("Enter Rating Given to Driver: "))
                rate_c=int(input("Enter Rating Given to customer: "))
                customer_id=int(input("Enter Customer ID: "))
                driver_id=int(input("Enter Driver ID: "))
                admin_id=int(input("Enter Admin ID: "))

                tup=(ride_id,ride_date,ride_time,pick_up_loc,dest_loc,ride_fare,fare_mode,rate_d,rate_c,customer_id,driver_id,admin_id)
                
                cursor.execute('''insert into Rides (ride_id, ride_date, ride_time, pick_up_location, destination_location, ride_fare, fare_mode, rating_given_to_driver, rating_given_to_customer, customer_id, driver_id, admin_id) values
                (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)''',tup)

            elif(qur==6):
                # transactions

                todel=int(input("Enter the employee ID you want to delete: "))
                cursor.execute("""start transaction;
                delete from employee where emp_id=%s; 
                delete from employee_phone_no where emp_id=%s;
                commit;""",(todel,todel))

            elif(qur==7):
                #transactions

                f_year=int(input("Enter the year (feedbacks before that year will be deleted): "))
                f_month=int(input("Enter the month (feedbacks before that month will be deleted): "))
                cursor.execute("""
                start transaction;
                delete from customer_feedback where year(feedback_date)<=%s and month(feedback_date)<=%s;
                delete from driver_feedback where year(feedback_date)<=%s and month(feedback_date)<=%s;
                commit;""",(f_year,f_month,f_year,f_month))

            elif(qur==8):
                #transactions
                per_inc_wd=int(input("Enter the percent to be increased for the Web Developer's salary: "))
                per_inc_hr=int(input("Enter the percent to be increased for the HR's salary: "))
                per_inc_mgr=int(input("Enter the percent to be increased for the Manager's salary: "))
                per_inc_cs=int(input("Enter the percent to be increased for the Customer Support's salary: "))
                amt_wd=1+(per_inc_hr/100)
                amt_hr=1+(per_inc_hr/100)
                amt_mgr=1+(per_inc_mgr/100)
                amt_cs=1+(per_inc_cs/100)
                cursor.execute("""
                start transaction;
                update employee set emp_salary=%s*emp_salary where emp_role='Web Developer';
                update employee set emp_salary=%s*emp_salary where emp_role='HR';
                update employee set emp_salary=%s*emp_salary where emp_role='Manager';
                update employee set emp_salary=%s*emp_salary where emp_role='Customer Support';
                commit;""",(amt_wd,amt_hr,amt_mgr,amt_cs))

            else:
                break

    elif(type==2):
        uid=int(input("Enter your User ID: "))
        passwd=input("Enter your password: ")

        if(login(uid,passwd)):
            print("Login Successful!!")
        else:
            print("Login Failed")
            continue

        print('''
            MENU
            1. LIST OF PREVIOUS TRIPS
            2. UPDATE PASSWORD
            3. BOOK A CAB
            4. RENT A VEHICLE
            5. PURCHASE/EXTEND THE MEMBERSHIP
            6. EXIT
        ''')


        while(True):
            qur=int(input("Enter query to perform: "))
            if(qur==1):

                # query1
                # finding the list of previous trips a perticular customer had

                qur1=("""

                select ride_id, customer_id, temp.driver_id, temp.vehicle_type, temp.driver_name, rating_given_to_driver, pick_up_location, destination_location 
                from rides 
                INNER JOIN 
                (select driver_id, vehicle_type, CONCAT(d.fname,' ',d.lname) as driver_name
                from driver as d INNER JOIN vehicle as v ON v.vehicle_id=d.vehicle_id) as temp 
                ON rides.driver_id=temp.driver_id
                where customer_id=%s order by rides.ride_date, rides.ride_time

                """)

                cust=(uid,)
                cursor.execute(qur1,cust)

                for row in cursor:
                    print(row)


            elif(qur==2):
                # query 2
                # updating the customer password (there can be a case when the customers forget their password a they want to change it)

                qur2=("""

                update customer set c_password=%s where customer_id=%s

                """)

                new_passwd=input("Enter New Password: ")

                cust=(new_passwd,uid)

                cursor.execute(qur2,cust)

            elif(qur==3):
                # query 3
                # booking a cab

                now = datetime.now()
                dt_string = now.strftime("%Y-%m-%d")
                tm_string = now.strftime("%H:%M:%S")
                ride_date=dt_string
                ride_time=tm_string

                pick_up_loc=input("Enter Pick Up Location: ")
                dest_loc=input("Enter Destination Location: ")

                ride_fare=""
                fare_mode=""

                print("""
                CHOOSE THE TYPE OF VEHICLE:
                1. SUV (Rs. 1000)
                2. two-wheeler (Rs. 150)
                3. three-wheeler (Rs. 300)
                4. compact (Rs. 450)
                5. luxury (Rs. 2500)
                """)

                vh_type=int(input("Enter the vehicle type: "))
                if(vh_type==1):
                    ride_fare=1000
                elif(vh_type==2):
                    ride_fare=150
                elif(vh_type==3):
                    ride_fare=300
                elif(vh_type==4):
                    ride_fare=450
                else:
                    ride_fare=2500
                
                print("""
                CHOOSE THE PAYMENT MODE:
                1. UPI
                2. Credit Card
                3. Cash
                """)

                py_md=int(input("Enter the mode of payment: "))
                if(py_md==1):
                    fare_mode='UPI'
                elif(py_md==2):
                    fare_mode='Credit Card'
                else:
                    fare_mode='Cash'

                print("<----- after ride finishes ------>")

                rate_d=int(input("Enter Rating Given to Driver: "))
                rate_c=random.randint(1, 5)
                customer_id=uid
                driver_id=random.randint(1, 100)
                admin_id=random.randint(1, 100)

                tup=(ride_date,ride_time,pick_up_loc,dest_loc,ride_fare,fare_mode,rate_d,rate_c,customer_id,driver_id,admin_id)
                
                cursor.execute('''insert into Rides (ride_date, ride_time, pick_up_location, destination_location, ride_fare, fare_mode, rating_given_to_driver, rating_given_to_customer, customer_id, driver_id, admin_id) values
                (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)''',tup)

                print("Rating given by the driver: ", rate_c)
                print("Cab rate: ", ride_fare)

            elif(qur==4):
                print()
                now = datetime.now()
                start_date = now.strftime("%Y-%m-%d")
                end_date = input("Enter End Date: ")
                vehicle_id=-1
                rent_rate=-1

                print("""
                CHOOSE THE TYPE OF VEHICLE:
                1. SUV (Rs. 10000)
                2. two-wheeler (Rs. 1000)
                3. three-wheeler (Rs. 5000)
                4. compact (Rs. 7000)
                5. luxury (Rs. 25000)
                """)

                vh_type=int(input("Enter the vehicle type: "))
                if(vh_type==1):
                    cursor.execute("select vehicle_id from vehicle where vehicle_type='SUV';")
                    for row in cursor:
                        vehicle_id=row[0]
                    rent_rate=10000
                elif(vh_type==2):
                    cursor.execute("select vehicle_id from vehicle where vehicle_type='two-wheeler';")
                    for row in cursor:
                        vehicle_id=row[0]
                    rent_rate=1000
                elif(vh_type==3):
                    cursor.execute("select vehicle_id from vehicle where vehicle_type='three-wheeler';")
                    for row in cursor:
                        vehicle_id=row[0]
                    rent_rate=5000
                elif(vh_type==4):
                    cursor.execute("select vehicle_id from vehicle where vehicle_type='compact';")
                    for row in cursor:
                        vehicle_id=row[0]
                    rent_rate=7000
                else:
                    cursor.execute("select vehicle_id from vehicle where vehicle_type='luxury';")
                    for row in cursor:
                        vehicle_id=row[0]
                    rent_rate=25000

                print("<-------- after the rent --------->\n")
                rating_given=int(input("Rate your experience with the car: "))
                admin_id=random.randint(1, 100)
                
                cursor.execute('''insert into Rents (start_date, end_date, rent_rate, rating_given, vehicle_id, admin_id) values (%s,%s,%s,%s,%s,%s);''',(start_date,end_date,rent_rate,rating_given,vehicle_id,admin_id))
                rent_id=-1
                cursor.execute('''SELECT rent_id FROM rents;''')
                for row in cursor:
                    rent_id=row[0]
                cursor.execute('''update customer set rent_id=%s where customer_id=%s;''',(rent_id,uid))
                print("Rent Rate: ", rent_rate)

            elif(qur==5):
                # query 5
                # membership

                if(is_mem(uid)):
                   
                   # non conflicting transaction

                   end_date=input("Enter Extended Date: ")
                   cursor.execute('''start transaction; 
                    update membership set end_date=%s 
                    where membership_id=(select membership_id from customer where customer_id=%s);
                    commit;''',(end_date,uid))
                   
                else:
                    now = datetime.now()
                    start_date = now.strftime("%Y-%m-%d")
                    end_date = input("Enter End Date: ")
                    cursor.execute('''insert into Membership (start_date, end_date) values (%s,%s);''',(start_date,end_date))
                    mem_id=-1
                    cursor.execute('''SELECT membership_id FROM membership;''')
                    for row in cursor:
                        mem_id=row[0]
                    cursor.execute('''update customer set membership_id=%s where customer_id=%s;''',(mem_id,uid))
            else:
                break

    elif(type==3):
        did=int(input("Enter your User ID: "))
        passwd=input("Enter your password: ")

        if(login_driver(did,passwd)):
            print("Login Successful!!")
        else:
            print("Login Failed")
            continue
        
        print('''
            MENU
            1. RENT A VEHICLE
            2. VIEW CURRENT RATING
            3. VIEW PREVIOUS RIDES GIVEN
            4. EXIT
        ''')

        while(True):
            qur=int(input("Enter query to perform: "))
            if(qur==1):
                print()
                now = datetime.now()
                start_date = now.strftime("%Y-%m-%d")
                end_date = input("Enter End Date: ")
                vehicle_id=-1
                rent_rate=-1

                print("""
                CHOOSE THE TYPE OF VEHICLE:
                1. SUV (Rs. 10000)
                2. two-wheeler (Rs. 1000)
                3. three-wheeler (Rs. 5000)
                4. compact (Rs. 7000)
                5. luxury (Rs. 25000)
                """)

                vh_type=int(input("Enter the vehicle type: "))
                if(vh_type==1):
                    cursor.execute("select vehicle_id from vehicle where vehicle_type='SUV';")
                    for row in cursor:
                        vehicle_id=row[0]
                    rent_rate=10000
                elif(vh_type==2):
                    cursor.execute("select vehicle_id from vehicle where vehicle_type='two-wheeler';")
                    for row in cursor:
                        vehicle_id=row[0]
                    rent_rate=1000
                elif(vh_type==3):
                    cursor.execute("select vehicle_id from vehicle where vehicle_type='three-wheeler';")
                    for row in cursor:
                        vehicle_id=row[0]
                    rent_rate=5000
                elif(vh_type==4):
                    cursor.execute("select vehicle_id from vehicle where vehicle_type='compact';")
                    for row in cursor:
                        vehicle_id=row[0]
                    rent_rate=7000
                else:
                    cursor.execute("select vehicle_id from vehicle where vehicle_type='luxury';")
                    for row in cursor:
                        vehicle_id=row[0]
                    rent_rate=25000

                print("<-------- after the rent --------->\n")
                rating_given=int(input("Rate your experience with the car: "))
                admin_id=random.randint(1, 100)
                
                cursor.execute('''insert into Rents (start_date, end_date, rent_rate, rating_given, vehicle_id, admin_id) values (%s,%s,%s,%s,%s,%s);''',(start_date,end_date,rent_rate,rating_given,vehicle_id,admin_id))
                rent_id=-1
                cursor.execute('''SELECT rent_id FROM rents;''')
                for row in cursor:
                    rent_id=row[0]
                cursor.execute('''update driver set rent_id=%s where driver_id=%s;''',(rent_id,did))

                print("Rent rate: ", rent_rate)

            elif(qur==2):
                cursor.execute('''Select curr_rating from driver where driver_id=%s;''',(did,))
                curr_rate=-1
                for row in cursor:
                    curr_rate=row[0]
                print("Current Rating: ",curr_rate)

            elif(qur==3):
                qur1=("""

                select ride_id, customer_id, temp.driver_id, temp.vehicle_type, temp.driver_name, rating_given_to_driver, pick_up_location, destination_location 
                from rides 
                INNER JOIN 
                (select driver_id, vehicle_type, CONCAT(d.fname,' ',d.lname) as driver_name
                from driver as d INNER JOIN vehicle as v ON v.vehicle_id=d.vehicle_id) as temp 
                ON rides.driver_id=temp.driver_id
                where rides.driver_id=%s order by rides.ride_date, rides.ride_time

                """)

                dir=(did,)
                cursor.execute(qur1,dir)

                for row in cursor:
                    print(row)

            else:
                break
    else:
        break

con.commit() #saves the changes in the original database

#very important to do the following
cursor.close()
con.close()